{"D3": {"IP_Related": "The work of the participant focused on IP (Intellectual Property) issues", "In_House": "The participant specifically mentions that they work or worked in-house", "Negotiates_Licenses": "The participant was involved in negotiating licenses", "Resolves_Complex_Issues": "The participants works or worked to resolve or mitigate complex issues arising from IP, indemnity, waivers, etc. that are not necessarily tied to license negotiation", "Open_Source_Compliance": "Participant works / worked specifically on open source compliance", "Licensing_Open_Source": "The participant is/was involved in the process of licensing open source software", "Monitors_License_Compliance": "The participant helps / helped review 3rd party licenses to check for license compliance", "Writes_Licenses": "The participant has been involved in the writing / drafting of licenses", "Litigates_Copyright_Violations": "The participant has been involved in the litigation (plaintiff or defense side) or copyright violation cases", "Self_Identified_Expert": "The participant describes themselves as an expert in this field", "Negotiates_SaaS_Agreements": "The participant has worked on the negotiation of SaaS Agreements", "Advise_Companies": "The participant advises a company or companies on license related issues", "Trademark_Policies": "The participants works with or is otherwise familiar with trademark\u00a0policies", "Enforcing_License_Conditions": "The participant helps clients whose license is being violated to resolve the issue", "Implemented_Processes": "The participant helps / helped to implement processes for using open source software and / or distributing software", "Indemnity_Waiver_Related_Clauses": "Within IP, participant deals with indemnity, waiver, related clauses", "Third_Party_Software_Library_Integration": "Participant reviews requests regarding third-party software library integration", "Plaintiff_and_Defendant_Litigation": "Participant litigated copyright cases both on plaintiff's and defendant's sides.", "Vendor_and_Customer_Representation": "Participant represented both vendors and customers", "Advises_Project_Communities": "Provides guidance\u00a0to project / tooling communities", "Early_Tool_Adopter": "Respondent was early to adopt compliance tools", "Extensive_Experience": "The respondent has many years of experience, exceeding 10", "Participant_In_Compliance_Initiatives": "Respondent contributes to or is active in compliance initiatives", "Outside_Counsel": "Respondent offers / offered outside counsel", "Teaches": "The respondent teaches\u00a0on software licenses, IP, or other similar legal subject", "Case_Expert": "Self proclaimed expert in software licensing cases", "Tool_Builder": "The person builds tools to help with license compliance tasks", "License_Database_Maintainer": "The participant maintains a database of software licenses", "No_Experience": "The respondent has no experience in license compliance", "Interpreting_Licenses": "One of the participants main jobs / roles is interpreting software licenses", "Investigate_Complaints": "Respondent investigates complaints of non-compliance", "Watch_Dog": "Participant works to uphold or ensure the rights / terms of copyleft (or other) licenses", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Joins_When_Negotiations_Fail": "Participant enters the scene after negotiations have fallen apart", "Compliance_Officer": "Participant works as a compliance officer for licenses that may or may not include open source licenses.", "Digital_Licensing_Management": "With with or on digital licensing management"}, "C1": {"Automated_Tooling": "Automated tooling is used to maintain license compliance.", "Previously_Manual_Process": "The process used to be mostly manual, but no longer is", "Answered_Reverse": "The respondent doesn't answer the question asked and instead focuses on the relationship with downstream users of a piece of software", "Consults_Counsel": "The company / organization seeks legal counsel to ensure compliance.\u00a0 This counsel can be in-house or out-of-house.\u00a0 This also includes roles like contract manager", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "External_Audits": "Software is audited by an outside entity, which may or may not be an automated tool", "SBOM": "SBOM is used in the process", "Impossible": "Ensuring license compliance is impossible for non-trivial projects", "Seperate_Legal_Team": "There is a separate division\u00a0in the company / organization focused specifically on legal issues", "Levels_of_Clearance": "Open source software has to go through many levels of clearance before it is finally allowed into a project", "Disallow_Certain_Licenses": "Certain licenses were not allowed in a project, such as GPL", "Representation_Warranty_of_Compliance": "Includes representation and warranty that clients will comply with third party license terms", "Litigation": "organization ensures compliance through lawsuits", "Private_Communication": "organization ensures compliance through private communications", "Public_Shaming": "organization ensures compliance through public shaming", "No_Oversight": "Participant's organization does not engage in direct oversight with ensuring compliance.", "Internal_Audits": "Software is audited by an in-house entity, which may or may not be an automated tool", "Review_Processes": "Policies and processes are established to review and use 3rd party software", "Self_Reporting": "Developers self report licenses or projects used", "Third_Party_Review_Board": "Establishment of a third party / open source review board", "Open_Source_Program_Office": "OSPOs are used to ensure license compliance", "Collect_Source_Code": "The source code of dependencies is collected and inspected", "License_Notices": "License notices are collected and examined to check compliance", "Attribution_Notices": "Client or organization provides attribution notices", "Release_Source_Code": "Client or organization releases source code of project", "Upstream_Enforcement": "Client relies on upstream enforcement", "Internal_Guidelines": "Internal guidelines are used by the client or organization to maintain compliance", "Manual_Effort": "The tasks and processes are completed manually", "3rd_Party_Requires_Non_Compliance": "A third party entity requires that customers not comply with FOSS licenses", "No_Idea_Whats_In_Project": "Developers or organization have no idea what components are in their project and thus don't work on compliance tasks", "Developer_Driven": "The process of compliance is driven by engineers and developers", "Contracts": "Contracts are drafted and reviewed to account for open source licenses", "Make_Modifications_Accessible": "Make modifications done to GPL licensed code easily accessible and installable", "Program_Mangement_Team": "A program management team is responsible for tracking licenses and source code", "Developed_Internal_Tools": "Participant developed own internal tools that replaced third party tools.", "Not_Applicable": "Does not apply to the respondent", "Review_Distributed_Projects": "All software projects that are distributed by the organization are reviewed", "Training": "Training developers and employees", "Internal_Expert_Review": "OSS experts from the organization conduct a review", "Tracking_3rd_Party": "Third party components are tracked proactively", "License_Servers": "License servers are used to ensure compliance", "Watermarks": "Watermark technology is used in compliance tasks", "Deployment_Choices": "Deployment choices manage how licensed software is used and accessed", "Use_Restrictions": "Imposes use restrictions on software in order to ensure compliance.", "Audits": "Indicates that audits are performed (of any type, can coincide with more specific audit codes)"}, "C2": {"Counsel": "Rely on counsel (either in-house or outside) to determine which types of licenses fit the companies risk profile", "Actively_Participate_in_OS": "Participate in Open Source projects to facilitate more desirable licensing outcomes", "Provide_Links_to_Source": "Companies provide links to the open source components used", "Ensure_Terms_Can_Be_Met": "There is a process to ensure that the licensing terms can be met by the development team before proceeding to finalize license negotiations / use a license", "Develop_Best_Practices": "Best practices for license compliance are created and followed", "Audits": "Conducts audits (internal or external) to determine and manage risk", "Make_Clients_Aware_of_OS": "Clients are made aware that the company's software uses open source", "Determine_Actual_Usage": "Determining how a software product is used in order to know if there is actually a compliance issue", "Automated_Tooling": "Automated tooling is used in the process of managing / assessing risks", "Put_Burden_On_Vendor": "During negotiations place burden on the software vendor", "Develop_Processes": "The participant helps / helped to implement processes for using open source software and / or distributing software", "Avoid_High_Risk_Licenses": "Companies avoid licenses they consider high risk, like copyleft licenses", "Taking_Compliance_Seriously": "The process of license compliance is taken seriously and isn't just seen as another box to check", "Incorporate_Terms_in_Contracts": "Terms from third party components are included in the end use contracts", "Little_Thought": "Companies give little thought to compliance and need to be educated", "Contract_Burden_on_Supplier": "During the contracting process, places as much burden as possible on the contractor/vendor supplying the licenses or work under the licenses", "Warranty_Indemnification_Extension": "Extends standard warranties and IP indemnification terms to third party / open-source software in end user contracts.", "Self_Reporting": "Developers self report licenses used", "Third_Party_Review_Board": "Establishment of a third party / open source review board", "Training": "Training developers and employees", "Establish_Guidelines": "Guidelines are established dictating which licenses can be used and when", "OS_Approval_Matrices": "Approval matrices are used in the process of determining which license uses are okay and which aren't", "Disclosure_Obligations": "Third parties are required to disclose their licenses and code usage", "Assurance_Clause": "Upstream components guarantee compliance with an assurance clause", "Blind_Hope": "The organization blindly hopes that the end project will be compliant", "Defined_License_Categories": "Licenses are put into categories", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Manual_Review": "Risk is managed through manual review", "Engineers": "Engineers and developers play a key role in managing risks", "Participate_In_Industry_Led_Programs": "Organizations will participate in industry-led programs aiming to address FOSS compliance issues", "Surface_Level": "Compliance is only done at a surface level", "Careful_Planning": "Risk is mitigated through careful planning", "Internal_Experts": "Internal OS experts are brought in and carefully vetted", "OSPO": "Open Source Program Office", "Publish_Source": "The source code is published to comply with license terms or is provided to the client", "Tracking_Components_Added": "Components are tracked and assessed as they are added to a project", "Not_Applicable": "Does not apply to the respondent", "Diligence_On_Developers": "The organization is diligent to assess the development team of the code used", "Providing_Links": "Provide links to used open source projects in a git repository or website", "Internal_Review_Board": "Establishment of an internal open source review board."}, "C3": {"Accidental_Misuse": "There is an accidental misuse of software, typically just a mistake or caused by a lack of knowledge", "Changing_License_Terms": "Terms of the license were changed, often unilaterally", "Negotiation_Issues": "Issues during the license negotiation process", "Breach_Issues": "License or contract terms were violated", "Termination_Issues": "License was terminated", "Interpretting_Exceptions": "Issues determining how to interpret license exceptions", "Determining_Combined_Work": "Issues determining what constitutes or is considered a combined work", "Determing_What_Is_Copyrighted": "Issue in actually determining what is covered by a copyright", "All_Types": "The participant expresses that they have experienced all the varieties of licensing issues", "Code_Ownership": "Determining whether the customer or the vendor gets ownership of the code", "Warranties": "Open source software is typically distributed on an as-is basis.\u00a0 No warranties", "Data_Privacy_Requirements": "Adding language to agreements to meet legal data privacy requirements", "Source_Code_Escrow": "Negotiating that source code will be made available to licensee", "Indemification": "Indemnification or compensation for license infringement", "Engineers_Ignore_Processes": "Engineers ignore the established processes for approving open source software", "Distributing_Uncompliant_Code": "Code that doesn't comply with software licenses is released", "Bringing_Team_to_Compliance": "Actually bringing teams into compliance", "Determing_License_Meaning": "Issues arising from determining what a license actually means or says", "Conflicting_Terms": "Issues arising from using two different software projects with conflicting terms", "Slowed_Development": "Development is slowed because of company policies", "Distribution_And_Use_Of_OSS": "Issues related to the distribution and use of open source software", "Determining_Compatibility": "Determining if a given license is compatible with a product or project", "Knowing_What_Is_Used": "Understanding what is even in the software project is a difficult task", "Problematic_Licenses": "Licenses considered problematic by the respondent or their clients", "Patent_Issues": "Issues related to patents", "Enforcement": "Issues in enforcing\u00a0license compliance", "Liability": "Issues in understanding liability", "Scope": "Issues in understanding the scope of software licenses and compliance", "Ownership": "Issues in understanding who owns portions of code or the project", "Usage_Restrictions": "Issues related to restrictions placed on the use of proprietary, paid products", "Smart_Contracts": "Issues that arise in the auditing of smart contracts", "Drafting": "Issues related to the drafting of license terms", "Missing_License_Info": "License information or the entire license are missing for a project", "Secondary_License": "An additional license creates issues", "Combining_OSS_Into_Proprietary": "Issues arise in combining copyleft OSS into proprietary software", "Missing_Copyright_Notices": "The copyright notices for the software are missing", "Missing_Source_Code": "The source code for a project is unavailable", "Small_Copied_Snippets": "Small snippets of copy/pasted code are problematic", "Proprietary_Kernel_Modules": "Proprietary kernel modules present a challenge", "Impact_Of_Apache_On_Patent_Claims": "Respondent has explored the impact of the Apache license on patent infringement claims", "Inconsistent_Interpretation": "Inconsistent license interpretation through the industry", "Applying_License_To_New_Tech": "Issues in understanding how to apply license terms to a new technology", "Widespread_Non_Compliance": "There is widespread non-compliance in the ecosystem", "Implementing_Standard_Practices": "Issues arise in implementing standard compliance practices", "Choosing_A_License": "Issues involved in the selection of a license", "Writing_A_License": "Issues pertaining to the drafting / writing of a software license", "Writing_Exceptions": "Issues in drafting or writing license exceptions", "Project_Planning": "Issues associated with general project planning", "Government_Procurement": "Problems involving government procurement", "Drafting_Public_Positions": "Drafting public positions on the meaning of open source licenses", "Still_Being_Surprised": "The respondent remarks that they are still being surprised by the different types of issues they encounter", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Litigation": "Client has been sued by copyright holder", "Disclosure_Requests": "Requests to disclose\u00a0information, including copyright notices, can be very difficult and time consuming", "Copyright_Issues": "Issues related to copyright or copyright law in general.", "Confusion_Over_Copyleft_Vs_Permissive": "Confusion arises over different license types, i.e. copyleft and permissive", "Legal_Confusion": "Response indicates confusion with aspects of the legal system, including contract law or copyright law", "Understanding_And_Following_Obligations": "Understanding and fulfilling license obligations can be difficult", "Unlicensed_Projects": "Developers want to use projects that are unlicensed", "Government_Purpose_Rights": "Issues arising from \"Government Purpose Rights\"", "Little_To_No_Evaluation_Before_Use": "Software components are integrated into the system with little to no appropriate evaluation"}, "C4": {"Infringer_Use": "It is more difficult to resolve issues that revolve around the users infringing licensing terms", "Extraneous_Use_Easy": "It is relatively simple to resolve issues that involve extraneous use", "Who_Can_Use_Easy": "Issues around who is allowed a license or can use a piece of software are fairly easy to resolve", "Litigation_Threats": "Threats of litigation pose a more difficult challenge", "Frontend_Easier_Than_Backend": "Problems that occur at the front-end are typically easier to resolve than those at the backend", "Interpreting_Licenses": "Difficulties in interpreting\u00a0license terms / language in the strict legal context", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Disaster_Recovery_Disputes": "Resolving disputes over disaster recovery are the toughest to resolve.\u00a0 This includes ownership of developed code, warranties, etc.", "Third_Party_Problems_Resolved": "Issues arising from using third party software have already been solved by standard terms and industry standards.", "Customer": "The most difficult problem to solve is the customer themselves.\u00a0 This is because of their lack of knowledge or lack of sophistication", "Educating_Licensors": "Teaching licensors about licenses and terms, including what is a legal wrong vs a breach of the norm", "Licenses_Based_On_Industry": "Licenses are based on industry practices and not based on court rulings", "Variations_In_Industry_Understanding": "Differences in understanding and interpretation between different\u00a0organizations", "Slowed_Development": "Mitigating the slow down experienced by all the legal processes is a difficult challenge", "Titleship": "Title to developed code, reps, and warranties are resolved by customers who either accept or look elsewhere", "Different_Standards_of_Interpretation": "Participant expresses difficulties arising from different standards of interpretation regarding different licenses.", "Deliberate_GPL_Non_Compliance": "Participant expresses deliberate and willfull non-compliance with the source code obligation for GPL licenses are difficult to resolve.", "Many_Dependencies": "Projects with many dependencies are much more likely to run into license issues", "Incorrect_Sub_Dependency_License": "The license of a nested sub-dependency is incorrect", "No_Replacements": "A portion of the code is under a problematic license, but there is no suitable alternative", "Contacting_Author": "It can be difficult to contact the author of a project", "Negotiating_Commercial_License": "It can be challenging to negotiate a commercial\u00a0license, particularly when dealing with open source projects", "Patent_Issues": "Issues involving patents are difficult to solve", "Liability": "Liability is a difficult problem to address", "Clauses_Unrelated_To_Copyright": "Clauses that are not directly related to copyright make licensing difficult", "RAM_Copyright_Doctrine": "The RAM copyright doctrine is outdated and makes licensing tasks difficult", "Small_Copied_Snippets": "Small snippets of copy/pasted code are problematic", "Large_Incompatible_Inclusions": "When large portions of code are included and licensed under an incompatible license, then the situation is difficult to resolve", "Contributors_Filing_Suits": "Contributors to the project filing lawsuits against licensees is difficult to address", "Partiality_In_Enforcement": "Enforcement depends on who the infringing entity / project is", "Copyleft_Requirements": "Copyleft requirements are difficult to resolve", "New_Tech_Statements": "Drafting statements explaining how a license pertains to a new technology are difficult", "Provide_As_Little_As_Possible": "Entities try to provide as little information as possible", "Incomplete_Source_Code": "The full source code is not distributed or made available", "Unclean_Code": "The source code is unclean", "Proprietary_vs_Open_Source": "Differences between open source, source available, and proprietary licenses", "Originator_Out_Of_Business": "The company or entity that owns the code has gone out of business", "Trolls": "License compliance trolls present a challenge", "Indemification": "Indemnification or compensation for license infringement", "Patent_Rights_Separate_From_License": "Clients separating patent rights from the licenses", "Litigation": "Litigation itself is one of the most difficult issues", "Determining_License_For_Binaries": "Determining the licenses of binaries is particularly difficult", "Project_Scale": "Determining licensing information for large projects is difficult", "Multiple_License_Sources": "There are multiple sources of licenses for the same project", "Poorly_Written_Licenses": "Licenses are poorly written", "Removal_Of_Infringing_Code": "Removing infringing code is a difficult\u00a0process", "Reconstructing_OS_Usage": "It is difficult to piece together open source license usage when records were not properly kept", "Community_Norms": "Difficulties arise when attempting to reconcile community norms regarding software licensing with each other and/or with what is legally correct."}, "C6": {"On_Going": "Challenges have not yet been fully resolved", "Developing_Processes": "Developing processes for approving software", "Outside_Counsel": "Challenges were resolved by consulting with outside counsel", "Trusted_OSS_Members": "Working with trusted, experienced members of the open source community", "Litigation": "Litigation is how problems are typically resolved", "Settlement": "Litigation ends in a settlement", "Informally": "Most claims are resolved informally and not through litigation", "Building_Experience": "Building experience in understanding the terms of different licenses and how they are applied", "Grant_Authority": "Give some personnel more authority to make decisions for the organization", "Trust_Between_Teams": "Establishing trust between legal and engineering teams", "Rewrite_Or_Remove_Code": "Rewriting or removing offending code to move project into compliance", "Commercial_License": "Negotiating a commercial license", "Varies": "There is little consistency between how challenges are resolved", "Arbitration": "Arbitration is how problems are typically solved", "Lawsuit_Dismissed": "One way challenges are resolved is by having the lawsuit dismissed", "Improving_Inbound_Licensing": "Improvements to inbound license checking and procedures resolve problems", "Cant_Resolve": "The challenges can't be resolved due to time constraints or other outside factors", "Analysis_And_Advice": "The participant carefully analyzes the situation and provides advice to clients", "Coming_Into_Compliance": "Challenges are addressed by bringing the product into compliance", "Pulling_Code": "Challenges are addressed by pulling product off the market", "Convince_Compliance": "Convince the offended party that the license covered the relevant contributions/actions."}, "C7": {"Trainings": "Required training sessions", "Dedicated_Team": "Organization has a dedicated team to resolve these issues", "Questionnaires_And_Tests": "The knowledge of employees\u00a0is tested or assessed", "Single_Point_Of_Contact": "Outside counsel trains one person that then ensures compliance", "Policies_And_Procedures": "Policies and procedures are put into place that ensure employees are complying with license terms", "Brown_Bag_Lunches": "Brown bag lunches were used to educate employees", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Mandatory_Disclaimers": "Disclaimers are required in the submission process of code", "Depends_On_Work": "It depends on the type of work that employees are doing", "Licensing_Bible": "Expert drafts a licensing bible that explains what the company will and will not accept.\u00a0 This can also include legal guides.\u00a0 This could also be called a white list / black list", "Discussions": "Discussions with sales team, executives, or other members of the company / organization", "Principal_Points_of_Contact": "Participant trains several different people to ensure compliance.", "Interdisciplinary_Team": "Organization has an interdisciplinary open source group consisted of both lawyers and engineers that help the engineering team work through compliance issues.", "Monitoring": "Organization has personnel that monitors compliance, and steps in when necessary.", "Communication": "Effective communication between legal and development teams", "Scans_And_Discussions": "Run regular code scans and hold follow-up conversations with engineers", "No_Requirements": "There should be no requirements imposed by upstream licenses", "Trust_Legal_Department": "Developers are told to trust the legal department", "Approval_Boards": "Approval boards are put in place to facilitate compliance", "OSPO": "Open Source Program Office", "Redlight_Greenlight": "Red light / Green light lists are used to facilitate compliance tasks", "Insufficient": "Current education is not sufficient", "Tech_Guru": "The company has one person who all developers go to with their questions.\u00a0 This person may have no actual expertise", "Legal_Takes_Lead": "The legal team takes the lead in the training", "Summary_Charts": "Summary charts are available quickly conveying information about license terms and restrictions"}, "E2": {"Easily_Obtained": "It was easy to obtain a license exception.\u00a0 License exceptions are typical negotiations", "Depends_On_Request": "The complication of negotiations is tied to how much the requested exception departs from license terms", "Only_Available_From_Private_Companies": "Exceptions are usually given by private companies and not community / open source projects", "Use_Dual_Licensing": "Some organizations use dual licensing as a way to grant exceptions", "Depends_On_Vendor": "Different vendors will have varying leverage and capacity to negotiate", "Harder_For_Large_Projects": "It is harder to get an exception for projects with a large number of contributors", "Only_Ask_If_Likely_To_Obtain": "You should only ask for an exception if you know that you are likely\u00a0to obtain it", "Difficult_Contacting_Author": "It is difficult to contact the author or maintainer of a project.\u00a0\u00a0Could be that they haven't responded, they are unreachable, or they are dead.", "No_Complete_Meeting": "Difficulties arose because there was not a single meeting with all parties involved.\u00a0 Instead papers were passed back and forth", "Substitute_Product": "Acquiring the exception was so difficult that a substitute was found instead", "License_Change": "The exception was achieved through a license change or relicensing of the project", "Difficult_To_Negotiate": "The negotiations of a license exception are complex and difficult", "Fork_Threats": "An entity threatens to fork the project if an exception is not given", "Industry_Bullies": "Large for-profit organizations bully or push around smaller organizations in order to get exceptions", "Maintain_License_Spirit": "It is important to maintain the spirit of the license in negotiations and not open exceptions that will be abused", "Exception_Was_Complicated": "The exception itself was complicated"}, "E4": {"Delayed_Shipping": "Product was unable to be shipped on time due to discovered problems", "More_Focus_On_Compliance": "Developers and engineers are moved from other projects in order to work on compliance", "Discovered_Late": "Issues are discovered late in development", "Re-Engineering": "The development team was forced to go back and rearchitect / re-engineer a solution", "Caught_Before_A_Problem": "Issues are typically caught before they become problematic", "Commercial_License": "Negotiations had to be entered to get a commercial license", "Deals_Fall_Through": "Deals fall through or go sideways because of discovered compliance issues", "Time_Consuming": "Time had to be devoted to finding a solution to the compliance problem", "Legal_Team_Block": "The legal team would not allow development to continue until licensing issues were resolved", "Engineer_Misunderstanding": "Engineers misunderstood the scope or restrictions of a license", "Late_Negotiations": "License negotiations started very late in the process", "Caught_In_Scan": "Issues were detected during a scan", "Exception_Not_Granted": "A requested waiver or exception was not granted", "Comply_Or_Dont_Use": "Either comply with a party's license or don't use their software", "Review_Causes_Delays": "Reviews cause delays that some organizations and developers are not happy with", "Change_License": "Needed to relicense the affected software."}, "E6": {"Increased_Negotiation_Time": "Changing requirements lead to increased negotiation times", "Happens_Often": "Requirement changes often happen", "Increased_Budget": "Changing requirements lead to an increased budget", "Increased_Annoyance": "Changing requirements annoy all parties involved", "Delays": "Changing requirements caused delays", "Depends_On_Change": "The impact depends on the change", "Minor": "Changes tend to have a minor impact", "Finding_Substitute": "Have to find a suitable substitute for the software with a changed requirement or write code with similar functionality in-house", "Buying_License": "Have to buy a license to use the software with a changed requirement", "Change_In_Software": "The source code / software was impacted by the changes", "Change_In_Distribution": "The method of distribution was impacted by the changes", "Use_Old_Version": "Had to use an old version of the software with a more preferable license", "Understand_Requirements": "Time has to be invested in understanding the new requirements and what remediations are necessary", "Change_In_Code_Disclosure": "The method of code disclosure was impacted by the changes", "Change_In_Patent_Rights": "The method of patenting was impacted by the changes", "Arbitration": "Arbitration was pursued", "Engineers_Cant_Use": "The engineers can't use a project they hoped to", "Favorable_Change": "The licensing change is favorable to the organization", "Increased_Effort": "License changes result in increased effort and the expenditure\u00a0of more time", "Not_Agile": "License and IP changes are not agile", "Project_Delayed": "License changes can delay a project", "Project_Killed": "License changes can kill a project"}, "EC1": {"Not_Applicable": "Does not apply to the respondent", "Frequent": "Notes that issues related to operating within different jurisdictions arise often.", "Infrequent": "Notes that issues related to operating within different jurisdictions do NOT arise often.", "Engage_Local_Counsel": "Works with counsel local to the jurisdiction\u00a0in question in order to ensure correctness.", "Different_Enforcement": "Compliance enforcement is handled more strictly or less strictly in different jurisdictions", "No_Issues": "No big issues have arisen", "Choice_Of_Law": "Using choice of law provisions is a solution to these problems", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Jurisdictional_Agnostic": "License terms and conditions are consistent across jurisdictions", "References_Case": "Makes reference to one or more specific cases.", "More_Important_Outside_USA": "Compliance is seen as more important and taken more seriously outside of the United States", "Cant_Comment": "Can't comment due to client confidentiality reasons", "Different_Legal_Jargon": "Issues arise due to concerns related to misinterpreting statements because of differences in legal jargon.", "Forum_Shopping": "Issues arising from different jurisdictions result in actors' forum shopping behavior in the global market for favorable judges and policies.", "Different_Interpretations": "Issues arise due to different interpretations of FOSS licenses in different jurisdictions. This is a separate issue from misinterpretation.", "Export_Control_Issues": "Issues arise in export control", "Mostly_In_US": "Most issues encountered have related involve the United States", "Different_IP_Law": "Issues arose due to differences in IP law in different jurisdictions"}, "EC3": {"Weak_Negotiating_Power": "Automatic termination clauses tend to appear when negotiating power is weak.", "Requires_Planning": "Automatic termination clauses can be handled with adequate planning, such as ensuring the ability to renew or renegotiate the license.", "Frequent": "Notes that automatic license-termination clauses come up frequently in their work.", "Infrequent": "Notes that automatic license-termination clauses do NOT come up frequently in their work.", "No_Cost_Software": "Automatic termination clauses tend to appear in situations involving no-cost software.", "Beta_Testing": "Automatic termination clauses tend to appear in situations involving beta-testing software.", "Cure_Provisions": "License termination provisions are not necessarily coupled with cure provisions, which can lead to problems even when a license is breached but quickly cured.", "Bad_Act": "License termination clauses frequently serve to revoke the license if the licensee uses the software for unlawful or improper purposes.", "Refund": "License termination is coupled with refunds for fees paid.", "Advises_On_Circumstances": "Respondent advises clients on what situations would lead to license termination via such a clause.", "Questionable_Effectiveness": "Questions how effective license termination clauses are.", "Closed_Source_Only": "Indicates that automatic termination clauses generally don't apply to open-source software.", "Arbitrary_Trigger": "Automatic license termination clauses can be defined to trigger when any given event occurs.", "Terminate_On_Breach": "License is automatically terminated when its terms are breached", "Open_Source_Licenses": "Automatic termination clauses tend to appear in some common open source licenses despite most saying nothing about termination, due to them being conditional licenses.", "Not_Open_Source_Licenses": "Participant's experience with automatic license termination clauses are not related to open-source licenses.", "Create_Uncertainty": "License termination clauses increase uncertainty and risk", "Patent_License": "A patent license was terminated", "Not_Invoked_In_Practice": "The clauses are present but not used in practice", "Work_To_Enforce": "The respondent has worked to make the termination clauses enforceable", "Lever_Of_Enforcement": "Termination clauses are one of the main levers of enforcing license compliance", "Try_To_Avoid": "The participant tries to avoid licenses that have automatic termination clauses", "Patent_Retaliation_Clause": "Participant has experience with patent retaliation clauses", "Hard_To_Enforce": "It is hard to enforce license termination", "Typically_Resolved": "Issues triggering automatic termination can usually be resolved."}, "EC5": {"Has_Experience": "Indicates that the respondent has experience with multi-licensing, but does not go into further detail.", "Litigated": "Respondent has litigated cases related to multi-licensed software.", "Open_Closed_Source_Difference": "Discusses how software can be licensed differently to open-source applications vs closed-source/commercial\u00a0applications.", "Advises_Models": "Respondent advises clients on multi-licensing models.", "Update_Provisions": "Considers update provisions (in which a license accounts for potential future versions of itself, eg. GPLv2+) to be multi-licensing.", "Incompatible_Licenses": "Discusses how some software licenses are incompatible with others.", "Advises_Meaning_and_Implementation": "Participant advises clients on meanings and implementations of multi-licensing in software projects.", "Common_In_Big_Projects": "Most big projects with many open source dependencies will have to deal with multi-licensed dependencies", "AND_VS_OR": "Understanding if the multilicense is an AND or an OR", "Frequent": "Multi-licensed projects occur frequently in practice", "License_Incompatibilities": "Response focuses on license incompatibilities between a projects main license and files in that project.\u00a0 (Technically not the multi-licensing we are discussing)", "Conflicting_Terms": "Terms between the multiple licenses are conflicting", "Understanding_How_License_Is_Selected": "Is the license selected by the licensor or is it determined by conditions?", "Unsophisticated_Devs": "Situation results from unsophisticated developers", "Assume_Favorable_License": "Assume the more favorable license applies", "Increase_Options": "Multi-licensed projects increase options for commercialization, support, and development", "Used": "Experience extends only to the usage of multi-licensed software projects", "Non_Software": "Has experience multi-licensing in a non-software context", "Licenses_As_Motivation": "Multi-licensing can be used to motivate potential consumers into using your software.", "Increased_Reach": "Using multi-licensing can help increase reach of software", "Move_To_Commerical": "Multi-licensing can help commercial companies move clients to commercial licenses", "License_Changes_Over_Time": "Participant has experience managing licenses over time as ownership changes", "Confusing": "Multi-licensing models can be confusing for engineers", "Different_Parts": "Different parts (e.g. files) of a project can be under different licenses", "Requires_Care": "Solid and careful decision making is required to employ a multi-licensing model", "Non_Standard_License_Complications": "Custom or unusual licenses require more effort to interpret and check for compliance", "In_Bound": "The participant has experience with in-bound multi-licensed projects"}, "N2": {"Cannot_Obtain_All": "Response indicates that not all necessary information can be obtained at least some of the time.", "Protective_Language": "Respondent employs protective language to limit liability.", "Third_Party_Consultation": "May consult a third party to verify that licensing is in order.", "Difficult_To_Locate": "The required information is obscure or otherwise hard to come by.", "Unknown_Integrations": "The extent to which third-party software is used is unknown.", "Lost_Institutional_Knowledge": "Knowledge of software's inner workings is lost when personnel leave an organization, making it harder to find necessary information regarding licensing.", "Legacy_Software_Difficulty": "Legacy software is particularly difficult to work with.", "Retrospective_Difficulty": "The necessary information is especially difficult to collect when looking back retrospectively on things that have already been done.", "SBOMs_Insufficient": "The data included in SBOMs is not sufficient for a complete license compliance review.", "Use_Case_Information": "Use case information is particularly difficult to come by.", "Working_With_Client": "Ensuring that the client provides all relevant information is a difficult task.", "Not_Applicable": "Does not apply to the respondent", "In_House_Legal": "In-house legal departments can be difficult to work with or unhelpful.", "Poor_Policies": "Organizational policies can contribute to poorly keeping track of important license information.", "Scale": "Project scale is a problem", "Line_Drawing": "Determining what should be included and what shouldn't is difficult. (Test, dev, production, etc)", "Time_Consuming": "The process is time consuming", "Manual_Process": "The act of data collection\u00a0is largely a manual process", "No_Issues": "No issues are faced in data collection", "Incorrect_Licenses": "Some of the licenses in the project are incorrect", "Poor_Documentation": "The project has poor documentation", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Misleading_Licenses": "The licenses of certain projects are misleading", "Expensive_Tools": "Currently tooling solutions are expensive", "Poor_Quality_Tools": "Available tools are of poor quality and do not provide accurate or useful results", "Little_Uniformity": "Participant expresses difficulty in obtaining proper copyright and licensing information, distributed version control, and/or others due to little uniformity in software development.", "Different_Source": "There are different\u00a0sources of license information, some more accurate than others", "Little_Attention": "Licensing is generally afforded little attention."}, "N3": {"Automated_Checks": "Automated compliance checks can be used to determine when licenses have been violated.", "Internal_Audit": "An internal audit can identify when software licenses have been violated.", "Tool": "Identifies one or more tools which are used to handle such situations.", "Assess_Breach": "Examine the scenario to determine whether a breach has\u00a0occurred.", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Community_Relationship_Mindfulness": "Any approach must take into consideration the relationship with the community that uses the software.", "FAQs": "FAQs can be used as a policing strategy to inform users.", "Reminders": "Can issue gentle reminders in order to enforce compliance.", "Cease_And_Desist": "C&D letters can be used to enforce license compliance.", "OSS_Litigation_Unpopular": "Litigation is unpopular in open source software communities, and should be a last resort.", "Name_And_Shame": "Publicly identifying license breaches can serve to protect the software and discourage noncompliance.", "Not_Applicable": "Does not apply to the respondent", "Monitoring_Techniques": "Various different monitoring techniques are used to check compliance", "Limit_Obligations": "Employ a strategy of ensuring that code is licensed such that it imposes limited obligations in order to simplify these kinds of checks.", "Determine_Licenses": "It is critical to determine what licenses apply and to find documentation\u00a0on those licenses", "Determine_Distribtion": "Determine how the code is being distributed (internal or external)", "Determine_Linking": "Determine how the source code is composed.\u00a0 Dynamic vs static linking", "Determine_Modification": "Determine if the open source code has been modified", "Design_Policies": "Put policies in place to detect or determine license compliance issues", "Determine_Remediation_Strategy": "Determine which remediation is best based on severity of issue", "No_Process": "No process is involved", "Engineer_Reporting": "Engineers report problems and issues", "Examine_Binaries": "Examine software binaries to determine what components are incorporated", "Client_Research": "The client does the research and brings the materials", "Check_Against_Open_Source": "Checks are done between the open source code and that distributed with a device\u00a0or piece of software", "Build_And_Inspect_Artifact": "The software must be built and the resulting artifact inspected", "Honor_System": "Determining compliance is basically just an honor system"}, "N4": {"Not_Applicable": "Does not apply to the respondent", "No_Notification": "Policies are updated, but clients are not notified", "Unsettled_Law": "OSS compliance replies on a lot of unsettled law", "See_Other_Responses": "Respondent_Points_To_Previous_Answers", "Expensive_Litigation": "Litigation is expensive", "No_Issues": "There are no or very few difficulties in the described process", "Negative_PR": "Litigation is not popular in OS, so pursuing it can result in negative PR", "Clients": "Clients do not always provide the necessary or required information or are otherwise difficult to communicate with", "When_To_Intervene": "Knowing when to intervene when a client or 3rd party misuses your software and when to leave things alone", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Auditing_Binaries": "Auditing binaries is difficult", "Manual_Process": "The process is carried out through manual effort", "Time_Consuming": "The process is very time consuming", "Low_Priority": "Devs give low priority to compliance and disclosure updates", "Knowing_What_Accused_Uses": "It is difficult to know what software the accused party is actually using", "Large_Codebase": "The codebase is large making the task difficult", "Inexperienced_Developers": "The project / source code were created by a team of inexperienced developers", "Misuse_Goes_Undetected": "The misuse goes undetected for a long period of time, resulting in a more complex, destructive outcome once it is found", "False_Positives": "False positives detected by tools make the processes time consuming and frustrating", "Company_Receives_PreBulids": "A company's product(s) are made up of pre-built components", "Supplier_Out_Of_Business": "The supplier of a component has gone out of business", "Lost_Source": "Original source code is lost", "Details": "Obtaining details is difficult. (But what details?)", "DMCA": "In determining whether software licenses have been violated, DMCA makes it difficult to find out whether the violated software is included in devices.", "Source_Code": "Companies do not have full access to the source code, or the source code itself is either not provided or incomplete.", "Privacy_Concerns": "Privacy laws and concerns make it difficult to effectively employ auditing strategies", "Security_Concerns": "Security risks and concerns make it difficult to effectively employ auditing strategies"}, "N6": {"Ease_Of_Use": "The tool should be easy to use.", "Check_Rights": "The tool should be able to check what rights are associated with the software.", "Contact_Expert": "The tools should provide the ability to contact an expert for help with license compliance.", "Automatic_Notifications": "The tool should automatically notify relevant parties when important changes are made, such as adding a new library.", "License_List": "The tool should keep a list of licenses in use.", "Highly_Compatible": "The tool should be versatile and compatible with different types of software.", "Cost_Effective": "The tool should not be prohibitively expensive.", "Read_SBOM": "The tool should be able to read or download information from an SBOM.", "Track_Software_Use": "The tool should keep track of the use of the software being examined.", "Not_Applicable": "Does not apply to the respondent", "Low_False_Positives": "The tool should minimize the amount of false positives (for licensed software) that it produces.", "Provide_Notice_Requirements": "The tool should automatically compile and produce any relevant notice requirements based on the licenses of the software it depends on.", "Identify_Problematic_Licenses": "The tool should be able to identify problematic licenses (copyleft or as defined by organization)", "Expected_Scan_Scope": "Tool should be explicit about the scope of the scan", "Scan_Strategies": "The tool should provide an explanation of scan strategies", "Explanation_Of_Results": "The tool should provide reasons for its results and recommendations", "Triggered_Automatically": "The tool should have the ability to be trigger automatically as part of a build process", "Easily_Read_Output": "The tool's output should be easy to read and interpret", "Identify_Library": "The tool should be capable of identifying libraries correctly without manual review or oversight", "Identify_License": "The tool should be able to correctly identify licenses without manual review or oversight", "Detect_Modification": "The tool should be able to detect if any modifications were made to the open source", "Impossible": "Such a tool can't exist", "Not_Sure": "The respondent is unsure about what features such a tool should have", "Human_Override": "Humans should be able to override some/all of the tool's output.", "Bad_Answer": "The response doesn't answer the question asked or is otherwise nonsensical", "Software_Provenance": "The tool should provide information on the origin of source code", "Existing_Tool_Improvement": "Recommended an improvement to an existing tool", "Corporate_Support_For_CLA": "The tool should support corporate / organizational as well as individual contributor license agreements", "Cant_Provide_Legal_Advice": "No tool will be able to provide legal advice", "Fact_Location": "The tool should be capable of locating facts", "Apply_User_Rules": "The tool should be capable of applying user defined rules", "Build_Reproducibility": "Tools should make builds reproducible", "Packaging_Assistance": "Tools should help developers package their source code for market", "Not_A_Good_Idea": "A tool that provides legal advice is not a good idea", "Relation_Between_License_And_Code": "The tool should make clear the relationship between licenses and the underlying source code", "Include_Limitations": "The tool should be upfront about its limitations", "Specify_Extra_Information": "The tool should include extra information\u00a0(e.g. instructions for installing modified software)", "Over_Reliance_On_Tools": "Currently there is an over reliance on compliance tools", "Already_Exists": "Such a tool already exists", "Runs_Quickly": "The tool should run quickly and not take an excessive amount of time", "Correct_Output": "The tool should provide correct output (whatever that output is)", "Decompose_Binaries": "The tool should be able to decompose / decompile binaries", "Provide_Analytics": "The tool should provide analytics that can then be manually reviewed", "Understand_License_Combinations": "The tool should be able to identify and understand interactions between multiple licenses.", "Identify_Distribution_Requirements": "The tool should be able to identify all relevant distribution requirements."}}